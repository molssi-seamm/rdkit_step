# -*- coding: utf-8 -*-
"""
Control parameters for the RDKit step in a SEAMM flowchart
"""

import logging
import seamm
import pprint  # noqa: F401

logger = logging.getLogger(__name__)


class RdkitParameters(seamm.Parameters):
    """
    The control parameters for RDKit.

    The developer will add a dictionary of Parameters to this class.
    The keys are parameters for the current plugin, which themselves
    might be dictionaries.

    You need to replace the "time" example below with one or more
    definitions of the control parameters for your plugin and application.

    Attributes
    ----------
    parameters : {"kind", "default", "default_units", "enumeration",
                  "format_string", description", help_text"}
        A dictionary containing the parameters for the current step.
        Each key of the dictionary is a dictionary that contains the
        the following keys: kind, default, default_units, enumeration,
        format_string, description and help text.

    parameters["kind"]: custom
        Specifies the kind of a variable. While the "kind" of a variable might
        be a numeric value, it may still have enumerated custom values
        meaningful to the user. For instance, if the parameter is
        a convergence criterion for an optimizer, custom values like "normal",
        "precise", etc, might be adequate. In addition, any
        parameter can be set to a variable of expression, indicated by having
        "$" as the first character in the field. For example, $OPTIMIZER_CONV.

    parameters["default"] : "integer" or "float" or "string" or "boolean" or
        "enum" The default value of the parameter, used to reset it.

    parameters["default_units"] : str
        The default units, used for resetting the value.

    parameters["enumeration"]: tuple
        A tuple of enumerated values.

    parameters["format_string"]: str
        A format string for "pretty" output.

    parameters["description"]: str
        A short string used as a prompt in the GUI.

    parameters["help_text"]: tuple
        A longer string to display as help for the user.

    See Also
    --------
    Rdkit, TkRdkit, Rdkit
    RdkitParameters, RDKitStep

    Examples
    --------
    parameters = {
        "time": {
            "default": 100.0,
            "kind": "float",
            "default_units": "ps",
            "enumeration": tuple(),
            "format_string": ".1f",
            "description": "Simulation time:",
            "help_text": ("The time to simulate in the dynamics run.")
        },
    }
    """

    parameters = {
        "desc3d": {
            "default": None,
            "kind": "string",
            "default_units": None,
            "enumeration": (
                "Asphericity",
                "Eccentricity",
                "InertialShapeFactor",
                "NPR1",
                "NPR2",
                "PMI1",
                "PMI2",
                "PMI3",
                "RadiusOfGyration",
                "SpherocityIndex",
            ),
            "format_string": "",
            "description": "3D Descriptors",
            "help_text": (
                "A list of 3-dimensional descriptors for embedding input"
                "data on molecular structure (imported from "
                "rdkit.Chem.Descriptors3D module."
            ),
        },
        "desc2d": {
            "default": None,
            "kind": "string",
            "default_units": None,
            "enumeration": (
                "MaxEStateIndex",
                "MinEStateIndex",
                "MaxAbsEStateIndex",
                "MinAbsEStateIndex",
                "MolWt",
                "HeavyAtomMolWt",
                "ExactMolWt",
                "NumValenceElectrons",
                "NumRadicalElectrons",
                "MaxPartialCharge",
                "MinPartialCharge",
                "MaxAbsPartialCharge",
                "MinAbsPartialCharge",
                "FpDensityMorgan1",
                "FpDensityMorgan2",
                "FpDensityMorgan3",
                "BCUT2D_MWHI",
                "BCUT2D_MWLOW",
                "BCUT2D_CHGHI",
                "BCUT2D_CHGLO",
                "BCUT2D_LOGPHI",
                "BCUT2D_LOGPLOW",
                "BCUT2D_MRHI",
                "BCUT2D_MRLOW",
                "BalabanJ",
                "BertzCT",
                "Chi0",
                "Chi0n",
                "Chi0v",
                "Chi1",
                "Chi1n",
                "Chi1v",
                "Chi2n",
                "Chi2v",
                "Chi3n",
                "Chi3v",
                "Chi4n",
                "Chi4v",
                "HallKierAlpha",
                "Ipc",
                "Kappa1",
                "Kappa2",
                "Kappa3",
                "LabuteASA",
                "PEOE_VSA1",
                "PEOE_VSA10",
                "PEOE_VSA11",
                "PEOE_VSA12",
                "PEOE_VSA13",
                "PEOE_VSA14",
                "PEOE_VSA2",
                "PEOE_VSA3",
                "PEOE_VSA4",
                "PEOE_VSA5",
                "PEOE_VSA6",
                "PEOE_VSA7",
                "PEOE_VSA8",
                "PEOE_VSA9",
                "SMR_VSA1",
                "SMR_VSA10",
                "SMR_VSA2",
                "SMR_VSA3",
                "SMR_VSA4",
                "SMR_VSA5",
                "SMR_VSA6",
                "SMR_VSA7",
                "SMR_VSA8",
                "SMR_VSA9",
                "SlogP_VSA1",
                "SlogP_VSA10",
                "SlogP_VSA11",
                "SlogP_VSA12",
                "SlogP_VSA2",
                "SlogP_VSA3",
                "SlogP_VSA4",
                "SlogP_VSA5",
                "SlogP_VSA6",
                "SlogP_VSA7",
                "SlogP_VSA8",
                "SlogP_VSA9",
                "TPSA",
                "EState_VSA1",
                "EState_VSA10",
                "EState_VSA11",
                "EState_VSA2",
                "EState_VSA3",
                "EState_VSA4",
                "EState_VSA5",
                "EState_VSA6",
                "EState_VSA7",
                "EState_VSA8",
                "EState_VSA9",
                "VSA_EState1",
                "VSA_EState10",
                "VSA_EState2",
                "VSA_EState3",
                "VSA_EState4",
                "VSA_EState5",
                "VSA_EState6",
                "VSA_EState7",
                "VSA_EState8",
                "VSA_EState9",
                "FractionCSP3",
                "HeavyAtomCount",
                "NHOHCount",
                "NOCount",
                "NumAliphaticCarbocycles",
                "NumAliphaticHeterocycles",
                "NumAliphaticRings",
                "NumAromaticCarbocycles",
                "NumAromaticHeterocycles",
                "NumAromaticRings",
                "NumHAcceptors",
                "NumHDonors",
                "NumHeteroatoms",
                "NumRotatableBonds",
                "NumSaturatedCarbocycles",
                "NumSaturatedHeterocycles",
                "NumSaturatedRings",
                "RingCount",
                "MolLogP",
                "MolMR",
                "fr_Al_COO",
                "fr_Al_OH",
                "fr_Al_OH_noTert",
                "fr_ArN",
                "fr_Ar_COO",
                "fr_Ar_N",
                "fr_Ar_NH",
                "fr_Ar_OH",
                "fr_COO",
                "fr_COO2",
                "fr_C_O",
                "fr_C_O_noCOO",
                "fr_C_S",
                "fr_HOCCN",
                "fr_Imine",
                "fr_NH0",
                "fr_NH1",
                "fr_NH2",
                "fr_N_O",
                "fr_Ndealkylation1",
                "fr_Ndealkylation2",
                "fr_Nhpyrrole",
                "fr_SH",
                "fr_aldehyde",
                "fr_alkyl_carbamate",
                "fr_alkyl_halide",
                "fr_allylic_oxid",
                "fr_amide",
                "fr_amidine",
                "fr_aniline",
                "fr_aryl_methyl",
                "fr_azide",
                "fr_azo",
                "fr_barbitur",
                "fr_benzene",
                "fr_benzodiazepine",
                "fr_bicyclic",
                "fr_diazo",
                "fr_dihydropyridine",
                "fr_epoxide",
                "fr_ester",
                "fr_ether",
                "fr_furan",
                "fr_guanido",
                "fr_halogen",
                "fr_hdrzine",
                "fr_hdrzone",
                "fr_imidazole",
                "fr_imide",
                "fr_isocyan",
                "fr_isothiocyan",
                "fr_ketone",
                "fr_ketone_Topliss",
                "fr_lactam",
                "fr_lactone",
                "fr_methoxy",
                "fr_morpholine",
                "fr_nitrile",
                "fr_nitro",
                "fr_nitro_arom",
                "fr_nitro_arom_nonortho",
                "fr_nitroso",
                "fr_oxazole",
                "fr_oxime",
                "fr_para_hydroxylation",
                "fr_phenol",
                "fr_phenol_noOrthoHbond",
                "fr_phos_acid",
                "fr_phos_ester",
                "fr_piperdine",
                "fr_piperzine",
                "fr_priamide",
                "fr_prisulfonamd",
                "fr_pyridine",
                "fr_quatN",
                "fr_sulfide",
                "fr_sulfonamd",
                "fr_sulfone",
                "fr_term_acetylene",
                "fr_tetrazole",
                "fr_thiazole",
                "fr_thiocyan",
                "fr_thiophene",
                "fr_unbrch_alkane",
                "fr_urea",
                "AUTOCORR2D_1",
                "AUTOCORR2D_2",
                "AUTOCORR2D_3",
                "AUTOCORR2D_4",
                "AUTOCORR2D_5",
                "AUTOCORR2D_6",
                "AUTOCORR2D_7",
                "AUTOCORR2D_8",
                "AUTOCORR2D_9",
                "AUTOCORR2D_10",
                "AUTOCORR2D_11",
                "AUTOCORR2D_12",
                "AUTOCORR2D_13",
                "AUTOCORR2D_14",
                "AUTOCORR2D_15",
                "AUTOCORR2D_16",
                "AUTOCORR2D_17",
                "AUTOCORR2D_18",
                "AUTOCORR2D_19",
                "AUTOCORR2D_20",
                "AUTOCORR2D_21",
                "AUTOCORR2D_22",
                "AUTOCORR2D_23",
                "AUTOCORR2D_24",
                "AUTOCORR2D_25",
                "AUTOCORR2D_26",
                "AUTOCORR2D_27",
                "AUTOCORR2D_28",
                "AUTOCORR2D_29",
                "AUTOCORR2D_30",
                "AUTOCORR2D_31",
                "AUTOCORR2D_32",
                "AUTOCORR2D_33",
                "AUTOCORR2D_34",
                "AUTOCORR2D_35",
                "AUTOCORR2D_36",
                "AUTOCORR2D_37",
                "AUTOCORR2D_38",
                "AUTOCORR2D_39",
                "AUTOCORR2D_40",
                "AUTOCORR2D_41",
                "AUTOCORR2D_42",
                "AUTOCORR2D_43",
                "AUTOCORR2D_44",
                "AUTOCORR2D_45",
                "AUTOCORR2D_46",
                "AUTOCORR2D_47",
                "AUTOCORR2D_48",
                "AUTOCORR2D_49",
                "AUTOCORR2D_50",
                "AUTOCORR2D_51",
                "AUTOCORR2D_52",
                "AUTOCORR2D_53",
                "AUTOCORR2D_54",
                "AUTOCORR2D_55",
                "AUTOCORR2D_56",
                "AUTOCORR2D_57",
                "AUTOCORR2D_58",
                "AUTOCORR2D_59",
                "AUTOCORR2D_60",
                "AUTOCORR2D_61",
                "AUTOCORR2D_62",
                "AUTOCORR2D_63",
                "AUTOCORR2D_64",
                "AUTOCORR2D_65",
                "AUTOCORR2D_66",
                "AUTOCORR2D_67",
                "AUTOCORR2D_68",
                "AUTOCORR2D_69",
                "AUTOCORR2D_70",
                "AUTOCORR2D_71",
                "AUTOCORR2D_72",
                "AUTOCORR2D_73",
                "AUTOCORR2D_74",
                "AUTOCORR2D_75",
                "AUTOCORR2D_76",
                "AUTOCORR2D_77",
                "AUTOCORR2D_78",
                "AUTOCORR2D_79",
                "AUTOCORR2D_80",
                "AUTOCORR2D_81",
                "AUTOCORR2D_82",
                "AUTOCORR2D_83",
                "AUTOCORR2D_84",
                "AUTOCORR2D_85",
                "AUTOCORR2D_86",
                "AUTOCORR2D_87",
                "AUTOCORR2D_88",
                "AUTOCORR2D_89",
                "AUTOCORR2D_90",
                "AUTOCORR2D_91",
                "AUTOCORR2D_92",
                "AUTOCORR2D_93",
                "AUTOCORR2D_94",
                "AUTOCORR2D_95",
                "AUTOCORR2D_96",
                "AUTOCORR2D_97",
                "AUTOCORR2D_98",
                "AUTOCORR2D_99",
                "AUTOCORR2D_100",
                "AUTOCORR2D_101",
                "AUTOCORR2D_102",
                "AUTOCORR2D_103",
                "AUTOCORR2D_104",
                "AUTOCORR2D_105",
                "AUTOCORR2D_106",
                "AUTOCORR2D_107",
                "AUTOCORR2D_108",
                "AUTOCORR2D_109",
                "AUTOCORR2D_110",
                "AUTOCORR2D_111",
                "AUTOCORR2D_112",
                "AUTOCORR2D_113",
                "AUTOCORR2D_114",
                "AUTOCORR2D_115",
                "AUTOCORR2D_116",
                "AUTOCORR2D_117",
                "AUTOCORR2D_118",
                "AUTOCORR2D_119",
                "AUTOCORR2D_120",
                "AUTOCORR2D_121",
                "AUTOCORR2D_122",
                "AUTOCORR2D_123",
                "AUTOCORR2D_124",
                "AUTOCORR2D_125",
                "AUTOCORR2D_126",
                "AUTOCORR2D_127",
                "AUTOCORR2D_128",
                "AUTOCORR2D_129",
                "AUTOCORR2D_130",
                "AUTOCORR2D_131",
                "AUTOCORR2D_132",
                "AUTOCORR2D_133",
                "AUTOCORR2D_134",
                "AUTOCORR2D_135",
                "AUTOCORR2D_136",
                "AUTOCORR2D_137",
                "AUTOCORR2D_138",
                "AUTOCORR2D_139",
                "AUTOCORR2D_140",
                "AUTOCORR2D_141",
                "AUTOCORR2D_142",
                "AUTOCORR2D_143",
                "AUTOCORR2D_144",
                "AUTOCORR2D_145",
                "AUTOCORR2D_146",
                "AUTOCORR2D_147",
                "AUTOCORR2D_148",
                "AUTOCORR2D_149",
                "AUTOCORR2D_150",
                "AUTOCORR2D_151",
                "AUTOCORR2D_152",
                "AUTOCORR2D_153",
                "AUTOCORR2D_154",
                "AUTOCORR2D_155",
                "AUTOCORR2D_156",
                "AUTOCORR2D_157",
                "AUTOCORR2D_158",
                "AUTOCORR2D_159",
                "AUTOCORR2D_160",
                "AUTOCORR2D_161",
                "AUTOCORR2D_162",
                "AUTOCORR2D_163",
                "AUTOCORR2D_164",
                "AUTOCORR2D_165",
                "AUTOCORR2D_166",
                "AUTOCORR2D_167",
                "AUTOCORR2D_168",
                "AUTOCORR2D_169",
                "AUTOCORR2D_170",
                "AUTOCORR2D_171",
                "AUTOCORR2D_172",
                "AUTOCORR2D_173",
                "AUTOCORR2D_174",
                "AUTOCORR2D_175",
                "AUTOCORR2D_176",
                "AUTOCORR2D_177",
                "AUTOCORR2D_178",
                "AUTOCORR2D_179",
                "AUTOCORR2D_180",
                "AUTOCORR2D_181",
                "AUTOCORR2D_182",
                "AUTOCORR2D_183",
                "AUTOCORR2D_184",
                "AUTOCORR2D_185",
                "AUTOCORR2D_186",
                "AUTOCORR2D_187",
                "AUTOCORR2D_188",
                "AUTOCORR2D_189",
                "AUTOCORR2D_190",
                "AUTOCORR2D_191",
                "AUTOCORR2D_192",
            ),
            "format_string": "",
            "description": "2D Descriptors",
            "help_text": (
                "A list of 2-dimensional descriptors for embedding input "
                "data on molecular structure (imported from "
                "rdkit.Chem.Descriptors module)."
            ),
        },
        "rdMolDesc": {
            "default": None,
            "kind": "string",
            "default_units": None,
            "enumeration": (
                "AtomPairsParameters",
                "BCUT2D",
                "CalcAUTOCORR2D",
                "CalcAUTOCORR3D",
                "CalcAsphericity",
                "CalcChi0n",
                "CalcChi0v",
                "CalcChi1n",
                "CalcChi1v",
                "CalcChi2n",
                "CalcChi2v",
                "CalcChi3n",
                "CalcChi3v",
                "CalcChi4n",
                "CalcChi4v",
                "CalcChiNn",
                "CalcChiNv",
                "CalcCoulombMat",
                "CalcCrippenDescriptors",
                "CalcEEMcharges",
                "CalcEccentricity",
                "CalcExactMolWt",
                "CalcFractionCSP3",
                "CalcGETAWAY",
                "CalcHallKierAlpha",
                "CalcInertialShapeFactor",
                "CalcKappa1",
                "CalcKappa2",
                "CalcKappa3",
                "CalcLabuteASA",
                "CalcMORSE",
                "CalcMolFormula",
                "CalcNPR1",
                "CalcNPR2",
                "CalcNumAliphaticCarbocycles",
                "CalcNumAliphaticHeterocycles",
                "CalcNumAliphaticRings",
                "CalcNumAmideBonds",
                "CalcNumAromaticCarbocycles",
                "CalcNumAromaticHeterocycles",
                "CalcNumAromaticRings",
                "CalcNumAtomStereoCenters",
                "CalcNumBridgeheadAtoms",
                "CalcNumHBA",
                "CalcNumHBD",
                "CalcNumHeteroatoms",
                "CalcNumHeterocycles",
                "CalcNumLipinskiHBA",
                "CalcNumLipinskiHBD",
                "CalcNumRings",
                "CalcNumRotatableBonds",
                "CalcNumSaturatedCarbocycles",
                "CalcNumSaturatedHeterocycles",
                "CalcNumSaturatedRings",
                "CalcNumSpiroAtoms",
                "CalcNumUnspecifiedAtomStereoCenters",
                "CalcPBF",
                "CalcPMI1",
                "CalcPMI2",
                "CalcPMI3",
                "CalcPhi",
                "CalcRDF",
                "CalcRadiusOfGyration",
                "CalcSpherocityIndex",
                "CalcTPSA",
                "CalcWHIM",
                "CustomProp_VSA_",
                "GetAtomFeatures",
                "GetAtomPairAtomCode",
                "GetAtomPairCode",
                "GetAtomPairFingerprint",
                "GetConnectivityInvariants",
                "GetFeatureInvariants",
                "GetHashedAtomPairFingerprint",
                "GetHashedAtomPairFingerprintAsBitVect",
                "GetHashedMorganFingerprint",
                "GetHashedTopologicalTorsionFingerprint",
                "GetHashedTopologicalTorsionFingerprintAsBitVect",
                "GetMACCSKeysFingerprint",
                "GetMorganFingerprint",
                "GetMorganFingerprintAsBitVect",
                "GetTopologicalTorsionFingerprint",
                "GetUSR",
                "GetUSRCAT",
                "GetUSRDistributions",
                "GetUSRDistributionsFromPoints",
                "GetUSRFromDistributions",
                "GetUSRScore",
                "MQNs_",
                "MakePropertyRangeQuery",
                "NumRotatableBondsOptions",
                "PEOE_VSA_",
                "Properties",
                "PropertyFunctor",
                "PropertyRangeQuery",
                "PythonPropertyFunctor",
                "SMR_VSA_",
                "SlogP_VSA_",
            ),
            "format_string": "",
            "description": "Descriptor Compute Functions",
            "help_text": (
                "A list of functions to compute molecular descriptors "
                "(imported from rdkit.Chem.rdMolDescriptors module)."
            ),
        },
        "fps": {
            "default": None,
            "kind": "string",
            "default_units": None,
            "enumeration": ("RDKFingerprint", "Torsions", "Pairs"),
            "format_string": "",
            "description": "Fingerprints",
            "help_text": (
                "A list of fingerprints for embedding input "
                "data on molecular structure."
            ),
        },
        "create tables": {
            "default": "yes",
            "kind": "boolean",
            "default_units": None,
            "enumeration": ("yes", "no"),
            "format_string": "",
            "description": "Create tables as needed:",
            "help_text": (
                "Whether to create tables as needed for "
                "results being saved into tables."
            ),
        },
    }

    def __init__(self, defaults={}, data=None):
        """
        Initialize the parameters, by default with the parameters defined above

        Parameters
        ----------
        defaults: dict
            A dictionary of parameters to initialize. The parameters
            above are used first and any given will override/add to them.
        data: dict
            A dictionary of keys and a subdictionary with value and units
            for updating the current, default values.

        Returns
        -------
        None
        """

        logger.debug("RdkitParameters.__init__")

        super().__init__(defaults={**RdkitParameters.parameters, **defaults}, data=data)
